generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Exam {
  id                BigInt              @id @default(autoincrement())
  created_at        DateTime            @default(now()) @db.Timestamptz(6)
  exam_start        DateTime?           @db.Timestamp(6)
  exam_end          DateTime?           @db.Timestamp(6)
  course_code       String?
  course_name       String?
  exam_type         String?
  building          String?
  room              String?
  rows              String?
  row_start         String?
  row_end           String?
  section           String?
  UserFavoritedExam UserFavoritedExam[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id                BigInt              @id @default(autoincrement())
  created_at        DateTime            @default(now()) @db.Timestamptz(6)
  username          String              @unique
  email             String              @unique
  hashed_pass       String
  UserFavoritedExam UserFavoritedExam[]
  UserSession       UserSession[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model UserFavoritedExam {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  exam_id    BigInt
  user_id    BigInt
  Exam       Exam     @relation(fields: [exam_id], references: [id], onDelete: Cascade)
  User       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model UserSession {
  id            BigInt   @id @default(autoincrement())
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  expires_at    DateTime @db.Timestamp(6)
  user_id       BigInt
  token         String
  is_terminated Boolean  @default(false)
  User          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
